architectury {
    common rootProject.enabled_platforms.split(", ")
}

repositories {
    maven { url "https://maven.shedaniel.me/" }
	maven { url = "https://api.modrinth.com/maven" } // LazyDFU
	maven { url = "https://maven.terraformersmc.com/releases/" } // Mod Menu
	maven { url = "https://mvn.devos.one/snapshots/" } // Create Fabric, Porting Lib, Forge Tags, Milk Lib, Registrate Fabric
	maven { url = "https://cursemaven.com" } // Forge Config API Port
	maven { url = "https://maven.cafeteria.dev/releases" } // Fake Player API
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
	maven { url = "https://jitpack.io/" } // Mixin Extras, Fabric ASM
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric}"

	// Compile against Create Fabric in common
	// beware of differences across platforms!
	// dependencies must also be pulled in to minimize problems, from remapping issues to compile errors.
	// All dependencies except Flywheel and Registrate are NOT safe to use!
	// Flywheel and Registrate must also be used carefully due to differences.
	modCompileOnly "com.simibubi.create:create-fabric-${minecraft_version}:${create_fabric}+mc${rootProject.minecraft_version}"
	modCompileOnly "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api}+${rootProject.minecraft_version}"
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
